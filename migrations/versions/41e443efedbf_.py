"""empty message

Revision ID: 41e443efedbf
Revises: 08372760aeef
Create Date: 2016-03-07 16:23:52.005979

"""

# revision identifiers, used by Alembic.
revision = '41e443efedbf'
down_revision = '08372760aeef'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlalchemy_utils
from main.models import BRACKETS_TYPE

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('photos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activity_photo',
    sa.Column('photo_id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.id'], ),
    sa.ForeignKeyConstraint(['photo_id'], ['photos.id'], ),
    sa.PrimaryKeyConstraint('photo_id', 'activity_id')
    )
    op.drop_table('org_org_activity')
    op.drop_table('user_org_activity')
    op.add_column('activity', sa.Column('confidential_desc', sa.Text(), nullable=True))
    op.add_column('activity', sa.Column('time_brackets', sqlalchemy_utils.types.choice.ChoiceType(BRACKETS_TYPE), nullable=True))
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('activity', 'time_brackets')
    op.drop_column('activity', 'confidential_desc')
    op.create_table('user_org_activity',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('org_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('service_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('customer', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('start', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('end', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('confirmed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['org_id'], [u'company.id'], name=u'user_org_activity_org_id_fkey'),
    sa.ForeignKeyConstraint(['service_id'], [u'service.id'], name=u'user_org_activity_service_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], [u'users.id'], name=u'user_org_activity_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'user_org_activity_pkey')
    )
    op.create_table('org_org_activity',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('from_org_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('to_org_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('service_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('start', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('end', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('confirmed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['from_org_id'], [u'company.id'], name=u'org_org_activity_from_org_id_fkey'),
    sa.ForeignKeyConstraint(['service_id'], [u'service.id'], name=u'org_org_activity_service_id_fkey'),
    sa.ForeignKeyConstraint(['to_org_id'], [u'company.id'], name=u'org_org_activity_to_org_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'org_org_activity_pkey')
    )
    op.drop_table('activity_photo')
    op.drop_table('photos')
    ### end Alembic commands ###
