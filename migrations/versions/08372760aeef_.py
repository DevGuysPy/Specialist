"""empty message

Revision ID: 08372760aeef
Revises: 668f39aea372
Create Date: 2016-03-07 14:07:41.232579

"""

# revision identifiers, used by Alembic.
revision = '08372760aeef'
down_revision = '668f39aea372'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlalchemy_utils
from main.models import RATING, ACTIVITY_STATUS_TYPES, PAYMENT_TYPE, TIMING_TYPE

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('from_user_id', sa.Integer(), nullable=False),
    sa.Column('to_user_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('start', sa.DateTime(), nullable=True),
    sa.Column('end', sa.DateTime(), nullable=True),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('specialist_rating', sqlalchemy_utils.types.choice.ChoiceType(RATING), nullable=True),
    sa.Column('customer_rating', sqlalchemy_utils.types.choice.ChoiceType(RATING), nullable=True),
    sa.Column('timing_type', sqlalchemy_utils.types.choice.ChoiceType(TIMING_TYPE), nullable=True),
    sa.Column('payment_type', sqlalchemy_utils.types.choice.ChoiceType(PAYMENT_TYPE), nullable=True),
    sa.Column('status', sqlalchemy_utils.types.choice.ChoiceType(ACTIVITY_STATUS_TYPES), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('created_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['from_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['service.id'], ),
    sa.ForeignKeyConstraint(['to_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activity_member',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'activity_id')
    )
    op.drop_table('user_user_activity')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_user_activity',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('from_user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('to_user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('service_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('location_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('start', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('end', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('specialist_rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('customer_rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('timing_type', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('confirmed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['from_user_id'], [u'users.id'], name=u'user_user_activity_from_user_id_fkey'),
    sa.ForeignKeyConstraint(['location_id'], [u'location.id'], name=u'user_user_activity_location_id_fkey'),
    sa.ForeignKeyConstraint(['service_id'], [u'service.id'], name=u'user_user_activity_service_id_fkey'),
    sa.ForeignKeyConstraint(['to_user_id'], [u'users.id'], name=u'user_user_activity_to_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'user_user_activity_pkey')
    )
    op.drop_table('activity_member')
    op.drop_table('activity')
    ### end Alembic commands ###
